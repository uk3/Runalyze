<?php

namespace Runalyze\Calculation\StrideLength;

use Runalyze\Model\Activity;
use Runalyze\Model\Trackdata;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2015-06-06 at 14:34:01.
 */
class CalculatorTest extends \PHPUnit_Framework_TestCase {

	public function testSingleValue() {
		$Calculator = new Calculator(
			new Trackdata\Entity(array(
				Trackdata\Entity::TIME => array(60),
				Trackdata\Entity::DISTANCE => array(0.180),
				Trackdata\Entity::CADENCE => array(90)
			))
		);
		$Calculator->calculate();

		$this->assertEquals( 100, $Calculator->average());
	}

	public function testSimpleArray() {
		$Calculator = new Calculator(
			new Trackdata\Entity(array(
				Trackdata\Entity::TIME => array(30, 60, 90, 120, 150),
				Trackdata\Entity::DISTANCE => array(0.09, 0.18, 0.30, 0.48, 0.55),
				Trackdata\Entity::CADENCE => array(90, 100, 100, 90, 70)
			))
		);
		$Calculator->calculate();

		$this->assertEquals( 122, $Calculator->average());
		$this->assertEquals(
			array(100, 90, 120, 200, 100),
			$Calculator->stridesData()
		);
	}

	/**
	 * @see https://github.com/Runalyze/Runalyze/issues/1951
	 */
	public function testTooBigValue() {
		$Calculator = new Calculator(
			new Trackdata\Entity(array(
				Trackdata\Entity::TIME => array(60),
				Trackdata\Entity::DISTANCE => array(0.180),
				Trackdata\Entity::CADENCE => array(90)
			))
		);
		$Calculator->calculate();

		$this->assertEquals(0, Calculator::forActivity(new Activity\Entity([
			Activity\Entity::DISTANCE => 75,
			Activity\Entity::TIME_IN_SECONDS => 7200
		])));
	}

}
